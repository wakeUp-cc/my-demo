package ${package}.${moduleName}.controller;

import java.util.Arrays;
import com.cc.entity.ResEntity;
import org.springframework.beans.factory.annotation.Autowired;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.springframework.web.bind.annotation.*;
import ${package}.${moduleName}.entity.${className}Entity;
import ${package}.${moduleName}.service.${className}Service;

/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@RestController
@RequestMapping("${moduleName}/${pathName}")
public class ${className}Controller {

    @Autowired
    private ${className}Service i${className}Service;

    /**
     * 获取单条
     */
    @GetMapping("/info/{${pk.attrname}}")
    public ResEntity<${className}Entity> info(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}){
		${className}Entity ${classname} = i${className}Service.getById(${pk.attrname});
        return ResEntity.success(${classname});
    }

    /**
     * 查询多条
     */
    @GetMapping("/list")
    public ResEntity<IPage<${className}Entity>> list(${className}Entity ${classname}) {
        Page<${className}Entity> result = new Page<>();
        if (${classname}.getIsPage()) {
            result.setRecords(
                        i${className}Service.list(
                            new QueryWrapper<${className}Entity>().lambda()
                    )
            );
        } else {
            result = i${className}Service.page(
                    new Page<${className}Entity>(${classname}.getCurrent(), ${classname}.getSize()),
                    new QueryWrapper<${className}Entity>()
                            .lambda()
            );
        }
        return ResEntity.success(result);
    }

    /**
     * 新增或修改
     */
    @PostMapping("/saveOrUpdate")
    public ResEntity<String> saveOrUpdate(@RequestBody ${className}Entity ${classname}){
		i${className}Service.saveOrUpdate(${classname});
        return ResEntity.success();
    }

    /**
     * 批量删除
     */
    @PostMapping("/delete")
    public ResEntity<String> delete(@RequestBody ${pk.attrType}[] ${pk.attrname}s){
		i${className}Service.removeByIds(Arrays.asList(${pk.attrname}s));
        return ResEntity.success();
    }

}
